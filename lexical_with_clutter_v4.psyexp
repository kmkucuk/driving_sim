<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2022.2.3">
  <Settings>
    <Param val="use prefs" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="use prefs" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="{'participant': 'f&quot;{randint(0, 999999):06.0f}&quot;', 'monitor_cb': '1', 'clutter_cb': '1', 'clutter_test': 'yes'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="pix" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[1920, 1080]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="lexical_with_clutter_v2" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="exp" valType="code" updates="None" name="logging level"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
  </Settings>
  <Routines>
    <Routine name="initialization">
      <CodeComponent name="function_definitions">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="from pprint import pprint&amp;#10;import calendar&amp;#10;import json&amp;#10;import math&amp;#10;import random&amp;#10;from datetime import date&amp;#10;from datetime import datetime&amp;#10;import os&amp;#10;from staircasing import staircaseFunction&amp;#10;from masking import getFilesInDir, selectRandomMask&amp;#10;import pandas as pd&amp;#10;from pathlib import Path&amp;#10;import os&amp;#10;from PIL import Image&amp;#10;&amp;#10;def getIconInfo(folder_path):&amp;#10;&amp;#10;    if not folder_path:&amp;#10;        print(&quot;No folder selected.&quot;)&amp;#10;        return {}&amp;#10;    &amp;#10;    files_info = {}&amp;#10;    &amp;#10;    for file_name in os.listdir(folder_path):&amp;#10;        file_path = os.path.join(folder_path, file_name)&amp;#10;        &amp;#10;        if os.path.isfile(file_path):&amp;#10;            name, ext = os.path.splitext(file_name)&amp;#10;            ext = ext.lower().strip(&quot;.&quot;)&amp;#10;            &amp;#10;            file_data = {&quot;extension&quot;: ext, &quot;dimension&quot;: None}&amp;#10;            &amp;#10;            try:&amp;#10;                with Image.open(file_path) as img:&amp;#10;                    file_data[&quot;dimension&quot;] = list(img.size) &amp;#10;            except Exception:&amp;#10;                pass&amp;#10;            &amp;#10;            files_info[name] = file_data&amp;#10;    &amp;#10;    return files_info&amp;#10;&amp;#10;def getClutterOrderCounterbalanceGroup(order_file = &quot;clutter_change_order_cb.xlsx&quot;, cb_group = &quot;1&quot;, practice_change_count = 5):&amp;#10;    if not isinstance(cb_group, str):&amp;#10;        raise ValueError(f&quot;Counterbalance group is not entered as string {cb_group}, its type is instead {type(cb_group)}&quot;)&amp;#10;&amp;#10;    xlsx_path = Path(order_file)&amp;#10;&amp;#10;    df = pd.read_excel(xlsx_path)&amp;#10;&amp;#10;    df.columns = [str(c).strip().lower() for c in df.columns]&amp;#10;&amp;#10;    df.head(), df.columns.tolist()&amp;#10;    required = {&quot;blocks&quot;, &quot;block_trial_#&quot;, &quot;gr1&quot;, &quot;gr2&quot;, &quot;gr3&quot;, &quot;gr4&quot;}&amp;#10;    missing = required - set(df.columns)&amp;#10;    if missing:&amp;#10;        raise ValueError(f&quot;Missing columns: {missing}&quot;)&amp;#10;&amp;#10;    def block_num(s):&amp;#10;        try:&amp;#10;            return int(str(s).split()[-1])&amp;#10;        except Exception:&amp;#10;            return str(s)&amp;#10;&amp;#10;    grouped = sorted(df.groupby(&quot;blocks&quot;), key=lambda kv: block_num(kv[0]))&amp;#10;&amp;#10;    gr_lists = {&quot;gr1&quot;: [], &quot;gr2&quot;: [], &quot;gr3&quot;: [], &quot;gr4&quot;: []}&amp;#10;    block_labels = []&amp;#10;&amp;#10;    for block_label, g in grouped:&amp;#10;        block_labels.append(block_label)&amp;#10;        for gr in gr_lists.keys():&amp;#10;            idx = g.loc[g[gr].astype(int) == 1, &quot;block_trial_#&quot;].astype(int).tolist()&amp;#10;            gr_lists[gr].append(idx)&amp;#10;&amp;#10;    # insert two randomly generated change index for the two clutter training parts&amp;#10;    random_practice_indices1 = random.sample(range(0, 20), practice_change_count)&amp;#10;    random_practice_indices2 = random.sample(range(0, 20), practice_change_count)&amp;#10;    random_practice_indices1.sort()&amp;#10;    random_practice_indices2.sort()&amp;#10;    gr_lists[&quot;gr&quot; + cb_group].insert(0, random_practice_indices2)&amp;#10;    gr_lists[&quot;gr&quot; + cb_group].insert(0, random_practice_indices1)&amp;#10;    &amp;#10;    selected_list = gr_lists[&quot;gr&quot; + cb_group]&amp;#10;    print(f&quot;Selected clutter change order group {cb_group} indices are: {selected_list}&quot;)&amp;#10;    return selected_list&amp;#10;    &amp;#10;&amp;#10;&amp;#10;def getRandomChangingIconIndex(clutter_change_v, number_of_changes):&amp;#10;    clutterIconChangeIndex = []&amp;#10;    while True:     &amp;#10;        for i in range(0, number_of_changes):&amp;#10;            clutterIconChangeIndex.extend(random.sample(clutter_change_v, &amp;#10;                                        min(len(clutter_change_v), &amp;#10;                                            number_of_changes - len(clutterIconChangeIndex))))&amp;#10;            if len(clutterIconChangeIndex) == number_of_changes:&amp;#10;                return clutterIconChangeIndex&amp;#10;&amp;#10;def changeClutterIcon(all_widgets, dynamic_clutter_icons, clutter_index):&amp;#10;    cur_key = dynamic_clutter_icons[clutter_index[0]][clutter_index[1]]&amp;#10;    all_widgets[clutter_index[0]][&quot;image_components&quot;][cur_key][&quot;file&quot;] = getImageWithKeyword(&quot;./stimuli/clutter&quot;, cur_key + &quot;_2&quot;)&amp;#10;    thisExp.addData('clutter_changed_icon', cur_key)&amp;#10;&amp;#10;&amp;#10;def revertClutterIcon(all_widgets, dynamic_clutter_icons, clutter_index):&amp;#10;    cur_key = dynamic_clutter_icons[clutter_index[0]][clutter_index[1]]&amp;#10;    all_widgets[clutter_index[0]][&quot;image_components&quot;][cur_key][&quot;file&quot;] = getImageWithKeyword(&quot;./stimuli/clutter&quot;, cur_key + &quot;_1&quot;)&amp;#10;&amp;#10;&amp;#10;def getFrames(component_duration, secPerFrame):&amp;#10;    return round(component_duration / secPerFrame)&amp;#10;&amp;#10;def trialSampling(vector, n):&amp;#10;    if n &gt; len(vector):&amp;#10;        raise ValueError(&quot;n cannot be greater than the length of the vector.&quot;)&amp;#10;    &amp;#10;    return random.sample(vector, n)&amp;#10;&amp;#10;def joinAndShuffle(vector1, vector2):&amp;#10;    combined = vector1 + vector2&amp;#10;    random.shuffle(combined)&amp;#10;    return combined&amp;#10;&amp;#10;def removeElements(source_vector, elements_to_remove):&amp;#10;    result = [x for x in source_vector if x not in elements_to_remove]&amp;#10;    return result&amp;#10;&amp;#10;&amp;#10;def getDateTimeText():&amp;#10;    # get current day for text display on calemdar widget&amp;#10;    my_date = date.today()&amp;#10;    today = datetime.now()&amp;#10;    month_index = datetime.now().month&amp;#10;    month = calendar.month_name[month_index]&amp;#10;    numeric_day = today.day # this is a integer&amp;#10;    str_num_day = str(numeric_day)&amp;#10;    if str_num_day[-1] == '1':&amp;#10;        day_suffix = 'st'&amp;#10;    elif str_num_day[-1] == '2':&amp;#10;        day_suffix = 'nd'&amp;#10;    elif str_num_day[-1] == '3':&amp;#10;        day_suffix = 'rd'&amp;#10;    elif int(str_num_day[-1]) &gt;= 4:&amp;#10;        day_suffix = 'th'                &amp;#10;    &amp;#10;    return str_num_day + day_suffix + &quot; &quot; + month +&quot;\n&quot; + calendar.day_name[my_date.weekday()] # e.g. 'Wednesday'\nNumber   &amp;#10;&amp;#10;&amp;#10;def getImageWithKeyword(directory, keyword):&amp;#10;    image_extensions = {'.png', '.jpg', '.jpeg', '.gif', '.bmp', '.tiff', '.webp'}&amp;#10;&amp;#10;    for root, _, files in os.walk(directory):&amp;#10;        for file in files:&amp;#10;            if any(file.lower().endswith(ext) for ext in image_extensions) and keyword.lower() in file.lower():&amp;#10;                return &quot;/&quot;.join([root, file])&amp;#10;                &amp;#10;def correctTextPosition(text_stim, text_position):&amp;#10;    if hasattr(text_stim, 'boundingBox'):&amp;#10;        return [text_position[0] + text_stim.boundingBox[0]/2, text_position[1]]&amp;#10;    else:&amp;#10;        return text_position&amp;#10;&amp;#10;def correctPosition(icon_size, icon_position):    &amp;#10;    &quot;&quot;&quot;deprecated after update on positioning and sizes&quot;&quot;&quot;&amp;#10;    return icon_position&amp;#10;#    return [icon_position[0] - icon_size[0]/2,&amp;#10;#    icon_position[1] - icon_size[1]/2] # math.copysign(icon_size[0], icon_position[0])/2, math.copysign(icon_size[1], icon_position[1])/2]&amp;#10;#    &amp;#10;    &amp;#10;def correctPositionSmall(icon_size, icon_position):    &amp;#10;    &quot;&quot;&quot;deprecated after update on positioning and sizes&quot;&quot;&quot;&amp;#10;    return icon_position&amp;#10;#    return [icon_position[0] + icon_size[0]/2, icon_position[1]]&amp;#10;&amp;#10;&amp;#10;&amp;#10;def getChangeIndex(dyn_values, chang_indx):&amp;#10;    change_order = []&amp;#10;    # chang_indx represents the len(keys) in dynamic_clutter_values&amp;#10;    while True:&amp;#10;        rand_indx = random.randint(0, len(chang_indx) - 1)&amp;#10;        if chang_indx[rand_indx] != 0:&amp;#10;            cur_clut = dyn_values[rand_indx]&amp;#10;            keys = list(cur_clut.keys())&amp;#10;            selectAgain = False&amp;#10;            while True:&amp;#10;                rand_keyi = random.randint(0, len(keys) - 1)&amp;#10;                selected_key = keys[rand_keyi]                    &amp;#10;                for ki in range(0, len(change_order)):&amp;#10;                    lookup_key = change_order[ki][1]&amp;#10;                    if selected_key == lookup_key:&amp;#10;                        selectAgain = True&amp;#10;                if selectAgain:&amp;#10;                    break&amp;#10;                else:&amp;#10;                    change_order.append([rand_indx, selected_key])&amp;#10;                    chang_indx[rand_indx] = chang_indx[rand_indx] - 1&amp;#10;                    break&amp;#10;        elif sum(chang_indx) == 0:&amp;#10;            break&amp;#10;    return change_order&amp;#10;&amp;#10;def generateChangeSequence():&amp;#10;    return random.sample(range(1, 12), 8)&amp;#10;&amp;#10;def getGarageText(boolean):&amp;#10;    if boolean == 0:&amp;#10;        return &quot;Garage Door\nClosed&quot;&amp;#10;    elif boolean == 1:&amp;#10;        return &quot;Garage Door\nOpen&quot;&amp;#10;    else:&amp;#10;        ValueError(&quot;Garage door clutter value is not valid.&quot;)&amp;#10;&amp;#10;def getDateTimeText(value):&amp;#10;    &quot;&quot;&quot;&amp;#10;    param day_shift: used for changing the day display on the panel for changing clutter&amp;#10;    condition. adding or subtracting int value from day of the month (13 +- day_shift ) &amp;#10;    &quot;&quot;&quot;&amp;#10;    &amp;#10;    # get current day for text display on calemdar widget&amp;#10;    my_date = date.today()&amp;#10;    today = datetime.now()&amp;#10;    month_index = datetime.now().month&amp;#10;    month = calendar.month_name[month_index]&amp;#10;    numeric_day = today.day # this is a integer&amp;#10;    if numeric_day + value &lt;= 0 or numeric_day + value &gt; 31:&amp;#10;        ValueError(&quot;Unacceptable day of the month after subtracting the clutter change value.&quot;)&amp;#10;    else:&amp;#10;        str_num_day = str(numeric_day + value)&amp;#10;        if str_num_day[-1] == '1':&amp;#10;            day_suffix = 'st'&amp;#10;        elif str_num_day[-1] == '2':&amp;#10;            day_suffix = 'nd'&amp;#10;        elif str_num_day[-1] == '3':&amp;#10;            day_suffix = 'rd'&amp;#10;        elif int(str_num_day[-1]) &gt;= 4:&amp;#10;            day_suffix = 'th'    &amp;#10;&amp;#10;        return str_num_day + &quot; &quot; + month +&quot;\n&quot; + calendar.day_name[my_date.weekday()] # e.g. 'Wednesday'\nNumber   &amp;#10;&amp;#10;def updateText(value, key):&amp;#10;&amp;#10;    if key == &quot;duration&quot;:&amp;#10;        return ('').join([&quot;1 hr &quot;, str(value), &quot; min&quot;])&amp;#10;    elif key == &quot;fuel&quot;:&amp;#10;        return ('').join([str(value) , &quot; mpg&quot;])&amp;#10;    elif key == &quot;distance&quot;:&amp;#10;        return ('').join([str(value) , &quot; mi&quot;])&amp;#10;    elif key == &quot;date&quot;:&amp;#10;        return getDateTimeText(value)&amp;#10;    elif key == &quot;garage_door&quot;:&amp;#10;        return getGarageText(value)&amp;#10;    elif key == &quot;battery&quot;:&amp;#10;        return ('').join([&quot;%&quot;, str(value)])&amp;#10;    elif key == &quot;miles&quot;:&amp;#10;        return ('').join([str(value), &quot;mi&quot;])&amp;#10;    elif key == &quot;temperature&quot;:&amp;#10;        return ('').join([str(value), &quot;F&quot;])&amp;#10;    else:&amp;#10;        KeyError('Widget was not found [', key,']')&amp;#10;&amp;#10;&amp;#10;def getImageWithKeyword(directory, keyword):&amp;#10;    image_extensions = {'.png', '.jpg', '.jpeg', '.gif', '.bmp', '.tiff', '.webp'}&amp;#10;&amp;#10;    for root, _, files in os.walk(directory):&amp;#10;        for file in files:&amp;#10;            if any(file.lower().endswith(ext) for ext in image_extensions) and keyword.lower() in file.lower():&amp;#10;                return &quot;/&quot;.join([root, file])&amp;#10;&amp;#10;&amp;#10;&amp;#10;def getPositions(widget_regions, position_percentage):&amp;#10;    &quot;&quot;&quot; This function is used for obtaining axis coordinates for clutter placement&amp;#10;&amp;#10;    :param clutter_region: (dict) enter the clutter's region dictionary obtained by clutter_separator (e.g. clutter[0] or clutter[target_clutter])&amp;#10;&amp;#10;    :param position_percentages: (int) List of 2 integers indicating the placement in percentage of the clutter region size:&amp;#10;             [25, 50] =&gt; [width * 25/100, height * 50/100]&amp;#10;    :return: point in coordinate system (x, y)&amp;#10;    &quot;&quot;&quot;&amp;#10;&amp;#10;    y_origin = widget_regions['y'] + (widget_regions['height']/2)&amp;#10;    x_origin = widget_regions['x'] - (widget_regions['width']/2)&amp;#10;&amp;#10;    return [round(x_origin + widget_regions['width']*(position_percentage[0]/100)), &amp;#10;            round(y_origin - widget_regions['height']*(position_percentage[1]/100))]&amp;#10;&amp;#10;&amp;#10;def getIconSize(widget_regions, size_ratio):&amp;#10;    &quot;&quot;&quot; This function is used for obtaining axis coordinates for clutter placement&amp;#10;&amp;#10;    :param widget_regions: (dict) enter the clutter's region dictionary obtained by clutter_separator (e.g. clutter[0] or clutter[target_clutter])&amp;#10;&amp;#10;    :param size_ratio: (int) List of 2 integers indicating the ratio of icon size relative to the widget region's width&amp;#10;    :return: size in pixels (w, h)&amp;#10;    &quot;&quot;&quot;&amp;#10;    return [round(widget_regions['width']*(size_ratio[0])), &amp;#10;            round(widget_regions['width']*(size_ratio[1]))]&amp;#10;            &amp;#10;            " valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="function_definitions" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="panel_initialization">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;# Example usage:&amp;#10;class Panel:&amp;#10;    def __init__(self, x, y):&amp;#10;        self.x = x&amp;#10;        self.y = y&amp;#10;        self.column_spacing = 0.03&amp;#10;        self.row_spacing = 0.03&amp;#10;        self.scale_ratios = [1, 2/3]&amp;#10;        self.scale_empty_part = &quot;bottom&quot;&amp;#10;        self.panel_x_size = round(x * self.scale_ratios[0])&amp;#10;        self.panel_y_size = round(y * self.scale_ratios[1])&amp;#10;        self.panel_position = self.estimate_panel_position()&amp;#10;&amp;#10;    def estimate_panel_position(self):&amp;#10;&amp;#10;        if self.scale_empty_part == &quot;top&quot;:&amp;#10;            y_axis_shift = -1&amp;#10;        elif self.scale_empty_part == &quot;bottom&quot;:&amp;#10;            y_axis_shift = 1&amp;#10;        else:&amp;#10;            y_axis_shift = 0&amp;#10;&amp;#10;        if self.scale_empty_part == &quot;left&quot;:&amp;#10;            x_axis_shift = 1&amp;#10;        elif self.scale_empty_part == &quot;right&quot;:&amp;#10;            x_axis_shift = -1&amp;#10;        else:&amp;#10;            x_axis_shift = 0&amp;#10;&amp;#10;        return [round(0.5 * x_axis_shift * (self.x * (1 - self.scale_ratios[0]))), &amp;#10;                    round(0.5 * y_axis_shift * (self.y * (1 - self.scale_ratios[1])))]&amp;#10;        &amp;#10;    def generate_panel_layout(self, config):&amp;#10;        &quot;&quot;&quot;&amp;#10;        Generates panel regions based on input config list.&amp;#10;        :param config: list of 4 integers, each 0 or 1&amp;#10;                       1 = single full-height panel in the column&amp;#10;                       0 = two half-height panels in the column&amp;#10;        :param win: object with win.x and win.y for screen width and height&amp;#10;        :return: list of panel region dictionaries with x, y, width, height&amp;#10;        &quot;&quot;&quot;&amp;#10;        assert len(config) == 4, &quot;Config must have exactly 4 elements (one per column)&quot;&amp;#10;        assert all(c in (0, 1) for c in config), &quot;Each config entry must be 0 or 1&quot;&amp;#10;&amp;#10;        window_origin_x = -self.x / 2 &amp;#10;        window_origin_y = self.y / 2 &amp;#10;&amp;#10;        if self.scale_empty_part == &quot;top&quot;:&amp;#10;            window_origin_y = window_origin_y - self.panel_y_size / 2        &amp;#10;&amp;#10;        panel_width = self.panel_x_size&amp;#10;        panel_height = self.panel_y_size&amp;#10;        col_spacing_ratio = self.column_spacing &amp;#10;        row_spacing_ratio = self.row_spacing&amp;#10;        num_col_spacings = 5  # 3 between + 2 sides        &amp;#10;        col_spacing = panel_width * col_spacing_ratio&amp;#10;        row_spacing = panel_height * row_spacing_ratio&amp;#10;        region_width = (panel_width - (col_spacing * num_col_spacings)) / 4&amp;#10;        regions = []&amp;#10;&amp;#10;        for col in range(4):&amp;#10;            x = window_origin_x + col_spacing * (col + 1) + region_width * col + region_width / 2&amp;#10;            if config[col] == 1:&amp;#10;                # Single full-height panel (minus top &amp; bottom spacing)&amp;#10;                height = panel_height - 2*row_spacing&amp;#10;                y = window_origin_y - row_spacing - height / 2&amp;#10;                regions.append({&amp;#10;                    &quot;x&quot;: int(x),&amp;#10;                    &quot;y&quot;: int(y),&amp;#10;                    &quot;width&quot;: int(region_width),&amp;#10;                    &quot;height&quot;: int(height)&amp;#10;                })&amp;#10;            else:&amp;#10;                # Two half-height panels&amp;#10;                height = (panel_height - 3 * row_spacing) / 2&amp;#10;                for row in range(2):&amp;#10;                    y = window_origin_y - (row_spacing * (row + 1) + height * row) - height / 2 &amp;#10;                    regions.append({&amp;#10;                        &quot;x&quot;: int(x),&amp;#10;                        &quot;y&quot;: int(y),&amp;#10;                        &quot;width&quot;: int(region_width),&amp;#10;                        &quot;height&quot;: int(height)&amp;#10;                    })&amp;#10;&amp;#10;        return regions&amp;#10;&amp;#10;    " valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="panel_initialization" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="exp_init">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="TEXT_WIDGETS_ENABLED = False&amp;#10;IMAGE_WIDGETS_ENABLED = True&amp;#10;SMALL_ICON_SIZE_RATIO = [0.5, 0.5]&amp;#10;LARGE_ICON_SIZE_RATIO = [0.5, 0.5]&amp;#10;&amp;#10;&amp;#10;if 'win' not in locals():&amp;#10;    from panel_generation_function import Panel&amp;#10;    class win:&amp;#10;        def __init__(self):&amp;#10;            self.size = [1920, 1080]&amp;#10;    window = win()&amp;#10;    panel_layout = Panel(window.size[0], window.size[1])&amp;#10;&amp;#10;else:&amp;#10;    panel_layout = Panel(win.size[0], win.size[1])&amp;#10;&amp;#10;widget_regions = panel_layout.generate_panel_layout([1, 0, 0, 1]) &amp;#10;&amp;#10;target_panel = 2&amp;#10;large_region_indices = [0, 5]&amp;#10;small_region_indices = [1, 2, 3, 4]&amp;#10;if target_panel in large_region_indices:&amp;#10;    large_region_indices.remove(target_panel)&amp;#10;elif target_panel in small_region_indices:&amp;#10;    small_region_indices.remove(target_panel)&amp;#10; &amp;#10;&amp;#10;&amp;#10;all_widgets = [&amp;#10;                {&quot;name&quot;: &quot;maintenance_widget&quot;,&amp;#10;                &quot;possible_regions&quot;: large_region_indices, &amp;#10;                &quot;region_index&quot;: 0,&amp;#10;                &quot;text_components&quot;: {},&amp;#10;                 &quot;image_components&quot;: &amp;#10;                 {&quot;engine&quot;: {&quot;file&quot;:  getImageWithKeyword(&quot;./stimuli/clutter&quot;, &quot;engine_1&quot;), &amp;#10;                               &quot;position_percentage&quot;: [50, 25], &quot;position_pixel&quot;: [],&amp;#10;                               &quot;size_ratio&quot;: SMALL_ICON_SIZE_RATIO, &quot;size_pixel&quot;: []}, &amp;#10;                  &quot;oil&quot;: {&quot;file&quot;:  getImageWithKeyword(&quot;./stimuli/clutter&quot;, &quot;oil_1&quot;), &amp;#10;                           &quot;position_percentage&quot;: [50, 50], &quot;position_pixel&quot;: [],&amp;#10;                               &quot;size_ratio&quot;: SMALL_ICON_SIZE_RATIO, &quot;size_pixel&quot;: []},&amp;#10;                  &quot;tirepressure&quot;: {&quot;file&quot;:  getImageWithKeyword(&quot;./stimuli/clutter&quot;, &quot;tirepressure_1&quot;), &amp;#10;                           &quot;position_percentage&quot;: [50, 75], &quot;position_pixel&quot;: [],&amp;#10;                               &quot;size_ratio&quot;: SMALL_ICON_SIZE_RATIO, &quot;size_pixel&quot;: []}&amp;#10;                  },&amp;#10;                },&amp;#10;                &amp;#10;                {&quot;name&quot;: &quot;drive_widget&quot;,&amp;#10;                 &quot;possible_regions&quot;: large_region_indices,&amp;#10;                 &quot;region_index&quot;: 5,&amp;#10;                 &quot;text_components&quot;: {},&amp;#10;                 &quot;image_components&quot;: &amp;#10;                 {&quot;fuel&quot;: {&quot;file&quot;:  getImageWithKeyword(&quot;./stimuli/clutter&quot;, &quot;fuel_1&quot;), &amp;#10;                               &quot;position_percentage&quot;: [50 , 25], &quot;position_pixel&quot;: [],&amp;#10;                               &quot;size_ratio&quot;: SMALL_ICON_SIZE_RATIO, &quot;size_pixel&quot;: []},&amp;#10;                    &quot;ecosport&quot;: {&quot;file&quot;:  getImageWithKeyword(&quot;./stimuli/clutter&quot;, &quot;ecosport_1&quot;), &amp;#10;                                    &quot;position_percentage&quot;: [50 , 50], &quot;position_pixel&quot;: [],&amp;#10;                                    &quot;size_ratio&quot;: SMALL_ICON_SIZE_RATIO, &quot;size_pixel&quot;: []},&amp;#10;                    &quot;farlight&quot;: {&quot;file&quot;:  getImageWithKeyword(&quot;./stimuli/clutter&quot;, &quot;farlight_1&quot;), &amp;#10;                                    &quot;position_percentage&quot;: [50 , 75], &quot;position_pixel&quot;: [],&amp;#10;                                    &quot;size_ratio&quot;: SMALL_ICON_SIZE_RATIO, &quot;size_pixel&quot;: []}&amp;#10;                  },&amp;#10;                },&amp;#10;                &amp;#10;                {&quot;name&quot;: &quot;cardoor_widget&quot;,&amp;#10;                 &quot;possible_regions&quot;: small_region_indices, &amp;#10;                 &quot;region_index&quot;: 1, &amp;#10;                 &quot;text_components&quot;: {},&amp;#10;                 &quot;image_components&quot;: &amp;#10;                 {&quot;cardoor&quot;: {&quot;file&quot;:  getImageWithKeyword(&quot;./stimuli/clutter&quot;, &quot;cardoor_1&quot;), &amp;#10;                             &quot;position_percentage&quot;: [50, 50], &quot;position_pixel&quot;: [],&amp;#10;                               &quot;size_ratio&quot;: LARGE_ICON_SIZE_RATIO, &quot;size_pixel&quot;: []}&amp;#10;                  },&amp;#10;                },&amp;#10;&amp;#10;                {&quot;name&quot;: &quot;carheat_widget&quot;,&amp;#10;                &quot;possible_regions&quot;: small_region_indices, &amp;#10;                 &quot;region_index&quot;: 3, &amp;#10;                 &quot;text_components&quot;: {},&amp;#10;                 &quot;image_components&quot;: &amp;#10;                 {&quot;carheat&quot;: {&quot;file&quot;:  getImageWithKeyword(&quot;./stimuli/clutter&quot;, &quot;carheat_1&quot;), &amp;#10;                                  &quot;position_percentage&quot;: [50, 50], &quot;position_pixel&quot;: [],&amp;#10;                               &quot;size_ratio&quot;: LARGE_ICON_SIZE_RATIO, &quot;size_pixel&quot;: []}&amp;#10;                  },&amp;#10;                },&amp;#10;&amp;#10;                {&quot;name&quot;: &quot;media_widget&quot;,&amp;#10;                 &quot;possible_regions&quot;: small_region_indices, &amp;#10;                 &quot;region_index&quot;: 4, &amp;#10;                 &quot;text_components&quot;: {},&amp;#10;                 &quot;image_components&quot;: &amp;#10;                 {&quot;media&quot;: {&quot;file&quot;:  getImageWithKeyword(&quot;./stimuli/clutter&quot;, &quot;media_1&quot;), &amp;#10;                                  &quot;position_percentage&quot;: [50, 50], &quot;position_pixel&quot;: [],&amp;#10;                               &quot;size_ratio&quot;: LARGE_ICON_SIZE_RATIO, &quot;size_pixel&quot;: []}&amp;#10;                  },&amp;#10;                }&amp;#10;        ] &amp;#10;&amp;#10;dynamic_clutter_values = [{&quot;duration&quot;: 28, &quot;fuel&quot;: 34, &quot;distance&quot;: 78}, &amp;#10;                          {&quot;date&quot;: 0}, &amp;#10;                          {&quot;garage_door&quot;: 0},&amp;#10;                          {&quot;temperature&quot;: 96},&amp;#10;                          {&quot;battery&quot;: 24, &quot;miles&quot;: 76}]&amp;#10;&amp;#10;# TODO: function to change order of elements in each data strct. to do what?&amp;#10;all_data_structures = [all_widgets, dynamic_clutter_values]&amp;#10;&amp;#10;for index in range(0, len(all_widgets)):    &amp;#10;    widget_index = all_widgets[index][&quot;region_index&quot;]&amp;#10;&amp;#10;    if TEXT_WIDGETS_ENABLED:&amp;#10;        curr_dyn_clutter = dynamic_clutter_values[index]&amp;#10;        for key, val in curr_dyn_clutter.items():&amp;#10;            all_widgets[index][&quot;text_components&quot;][key][&quot;text&quot;] = updateText(val, key)&amp;#10;&amp;#10;        curr_text_comps = all_widgets[index][&quot;text_components&quot;]&amp;#10;        for key, val in curr_text_comps.items():&amp;#10;            all_widgets[index][&quot;text_components&quot;][key][&quot;position_pixel&quot;] = getPositions(widget_regions[widget_index], val[&quot;position_percentage&quot;])&amp;#10;&amp;#10;    if IMAGE_WIDGETS_ENABLED:&amp;#10;        curr_img_comps = all_widgets[index][&quot;image_components&quot;]&amp;#10;        for key, val in curr_img_comps.items():&amp;#10;            all_widgets[index][&quot;image_components&quot;][key][&quot;position_pixel&quot;] = getPositions(widget_regions[widget_index], val[&quot;position_percentage&quot;])&amp;#10;            all_widgets[index][&quot;image_components&quot;][key][&quot;size_pixel&quot;] = getIconSize(widget_regions[widget_index], val[&quot;size_ratio&quot;])&amp;#10;&amp;#10;# letter size is dependent on the large panel's height&amp;#10;letter_size = widget_regions[1][&quot;height&quot;] * 0.2&amp;#10;day_size = widget_regions[1][&quot;width&quot;] * 0.125&amp;#10;header_size = widget_regions[1][&quot;width&quot;]  * 0.1&amp;#10;temperature_size = widget_regions[1][&quot;width&quot;]  * 0.14&amp;#10;battery_size = widget_regions[1][&quot;width&quot;] * 0.085&amp;#10;&amp;#10;textFont = &quot;./stimuli/font/robotoflex.ttf&quot;&amp;#10;&amp;#10;text_size = widget_regions[1][&quot;width&quot;]/12&amp;#10;header_wrap_width = 500&amp;#10;&amp;#10;exp_version = &quot;WITH_clutter&quot;&amp;#10;&amp;#10;# randomization&amp;#10;first_block = [1,2,3]&amp;#10;second_block = [5,6,7]&amp;#10;random.shuffle(first_block)&amp;#10;random.shuffle(second_block)&amp;#10;block_rows = [0] + first_block + [4, 5] + second_block&amp;#10;&amp;#10;if expInfo['monitor_cb'] == '1':&amp;#10;    pixPerCm = 36.974&amp;#10;elif expInfo['monitor_cb'] == '2':&amp;#10;    pixPerCm = 100&amp;#10;else:&amp;#10;    raise ValueError('Wrong MONITOR counterbalance group, it should be 1 or 2 (CHECK initalization &gt; exp_init &gt; line 281)')&amp;#10;&amp;#10;stim_cm = 0.4349&amp;#10;stim_size = stim_cm * pixPerCm &amp;#10;&amp;#10;mask_imgs = getFilesInDir(&quot;./stimuli/masks&quot;)&amp;#10;&amp;#10;frameRate = win.getActualFrameRate();&amp;#10;# convert to py float&amp;#10;frameRate = frameRate.item()&amp;#10;if frameRate == None:&amp;#10;    frameRate = 60    &amp;#10;secPerFrame = 1 / frameRate&amp;#10;&amp;#10;scoreScreen = {}&amp;#10;scoreScreen[&quot;lexical_only&quot;] = {&quot;accuracy&quot;: [], &quot;reaction_time&quot;: []}&amp;#10;scoreScreen[&quot;driving_lexical&quot;] = {&quot;accuracy&quot;: [], &quot;reaction_time&quot;: []}&amp;#10;&amp;#10;if expInfo[&quot;clutter_test&quot;] == &quot;yes&quot;:&amp;#10;    blocks_file = &quot;blocks_final_express.xlsx&quot;&amp;#10;else:&amp;#10;    blocks_file = &quot;blocks_final.xlsx&quot;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="exp_init" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="init_clutter">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="clutter_icon_index_v = [[0, 0], [0, 1], [0, 2], [1, 0], [1, 1], [1, 2], [2, 0], [3, 0], [4, 0]]&amp;#10;&amp;#10;dynamic_clutter_icons = [[&quot;engine&quot;, &quot;oil&quot;, &quot;tirepressure&quot;], &amp;#10;                          [&quot;fuel&quot;, &quot;ecosport&quot;, &quot;farlight&quot;], &amp;#10;                          [&quot;cardoor&quot;],&amp;#10;                          [&quot;carheat&quot;],&amp;#10;                          [&quot;media&quot;]]&amp;#10;                          &amp;#10;clutter_change_order_indices = getClutterOrderCounterbalanceGroup(cb_group = expInfo[&quot;clutter_cb&quot;])&amp;#10;clutter_changed_icon_indices = getRandomChangingIconIndex(clutter_icon_index_v, 9)&amp;#10;clutter_changed_icon_indices_practice = getRandomChangingIconIndex(clutter_icon_index_v, 5)&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="init_clutter" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="screen_display_images">
      <CodeComponent name="estimate_frame_durations_2">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="exp_clock = core.Clock()&amp;#10;stim_duration = 0.5 &amp;#10;minimum_acceptable_rt = 0.100" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="t_start_time = exp_clock.getTime()&amp;#10;t_frame_time = []&amp;#10;thisExp.addData('elapsed_time', exp_clock.getTime() - exp_start_time);&amp;#10;thisExp.addData('current_time', datetime.now().strftime(&quot;%H:%M:%S&quot;));&amp;#10;&amp;#10;if trials.thisN == 0:&amp;#10;    stim_duration = 0.1&amp;#10;    dummy_panel_size = [panel_layout.panel_x_size, panel_layout.panel_y_size]&amp;#10;else:&amp;#10;    stim_duration = 99&amp;#10;    dummy_panel_size = [1, 1]&amp;#10;&amp;#10;checkKey = True&amp;#10;checkTerminate = False&amp;#10;&amp;#10;# controlled descent for first two block, no descent for 3rd block&amp;#10;first_two_blocks = (blocks.thisN &lt; 2)&amp;#10;staircaseUpdateEnabled = (trials.thisN &gt; 8 and first_two_blocks) or (blocks.thisN == 2)&amp;#10;&amp;#10;# stimulus duration&amp;#10;if (trials.thisN &lt; 4) and first_two_blocks:&amp;#10;    stimulus_duration = 0.800&amp;#10;    stimulus_frames = getFrames(stimulus_duration, secPerFrame)&amp;#10;elif (trials.thisN &lt; 7) and first_two_blocks:&amp;#10;    stimulus_duration = 0.400&amp;#10;    stimulus_frames = getFrames(stimulus_duration, secPerFrame)&amp;#10;elif (trials.thisN &lt; 10) and first_two_blocks:&amp;#10;    stimulus_duration = 0.200&amp;#10;    stimulus_frames = getFrames(stimulus_duration, secPerFrame)&amp;#10;elif staircaseUpdateEnabled and staircaseEnabled:    &amp;#10;    stimulus_frames = staircase_dict[current_font].testLevel    &amp;#10;elif drivingLexicalTask or task_name == &quot;training_driving_lexical&quot;:&amp;#10;    stimulus_duration = 5&amp;#10;    stimulus_frames = getFrames(stimulus_duration, secPerFrame)&amp;#10;else: &amp;#10;    stimulus_duration = 0.500&amp;#10;    stimulus_frames = getFrames(stimulus_duration, secPerFrame)&amp;#10;&amp;#10;# mask/fixation size-durations-offsets&amp;#10;fixationDuration = 1&amp;#10;fixationFrames = getFrames(fixationDuration, secPerFrame) &amp;#10;currentMaskImage = selectRandomMask(mask_imgs)&amp;#10;preMaskOffsetFrames = fixationFrames&amp;#10;&amp;#10;if (maskEnabled == &quot;yes&quot;):&amp;#10;    maskDuration = 0.200&amp;#10;    maskFrames = getFrames(maskDuration, secPerFrame)            &amp;#10;    maskSize = [stim_size * xheight_to_size * 8, stim_size * xheight_to_size * 1.5]        &amp;#10;else:&amp;#10;    preMaskOffset = 0&amp;#10;    postMaskOffset = 0&amp;#10;    maskDuration = 0.01&amp;#10;    maskSize = [1, 1]&amp;#10;    maskFrames = 0 &amp;#10;&amp;#10;postMaskOffsetFrames = preMaskOffsetFrames + maskFrames + stimulus_frames    &amp;#10;stimOffsetFrames = preMaskOffsetFrames + maskFrames&amp;#10;&amp;#10;# sound config&amp;#10;if enableSound == 'yes':&amp;#10;    soundVolume = 1&amp;#10;    soundDuration = fixationDuration &amp;#10;    soundFrames = getFrames(soundDuration, secPerFrame)       &amp;#10;    if trials.thisN == 0:&amp;#10;        soundVolume = 0&amp;#10;        soundDuration = 0.01&amp;#10;        soundFrames = getFrames(soundDuration, secPerFrame)    &amp;#10;elif enableSound == 'no':&amp;#10;    soundVolume = 0&amp;#10;    soundDuration = 0.01&amp;#10;    stimOffset = 0&amp;#10;else:&amp;#10;    raise ValueError('Sound condition is not defined properly, type in yes or no in the blocks file')&amp;#10;&amp;#10;if trials.thisN == 0:&amp;#10;    trialDurationSeconds = 0.1&amp;#10;    maskFrames = 0    &amp;#10;    soundFrames = 0&amp;#10;    stimOffsetFrames = 0&amp;#10;    postMaskOffsetFrames = 0 &amp;#10;    preMaskOffsetFrames = 0&amp;#10;    fixationFrames = 0&amp;#10;    stimulus_frames = 0&amp;#10;else:&amp;#10;    trialDurationSeconds = 6&amp;#10;    &amp;#10;trialDurationFrames = getFrames(trialDurationSeconds, secPerFrame)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="t_frame_time.append(round((exp_clock.getTime() - t_start_time)*1000,2))&amp;#10;t_start_time = exp_clock.getTime()&amp;#10;&amp;#10;if lexical_response.keys and checkKey:&amp;#10;    # comission&amp;#10;    if frameN &lt;= stimOffsetFrames:&amp;#10;        lexical_response.corr = 0&amp;#10;    elif lexical_response.keys[-1] == correct_ans:&amp;#10;       lexical_response.corr = 1&amp;#10;    else:&amp;#10;       lexical_response.corr = 0&amp;#10;    # adjust rt for stim offset&amp;#10;    reaction_time = lexical_response.rt - (stimOffsetFrames * secPerFrame)    &amp;#10;    lexical_response.keys = []&amp;#10;    checkKey = False&amp;#10;    checkTerminate = True&amp;#10;&amp;#10;if blocks.thisN &lt; 4:&amp;#10;    trialTerminateEnabled = frameN &gt;= (postMaskOffsetFrames + maskFrames) - 1&amp;#10;else:&amp;#10;    trialTerminateEnabled = frameN &gt;= fixationFrames &amp;#10;    &amp;#10;if checkTerminate and trialTerminateEnabled:&amp;#10;    continueRoutine = False&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData('trial_frame_durations', t_frame_time);&amp;#10;thisExp.addData('stimulus_frames', stimulus_frames);&amp;#10;thisExp.addData('stimulus_duration', stimulus_frames * secPerFrame);&amp;#10;&amp;#10;if checkKey == True:&amp;#10;    # omission&amp;#10;    lexical_response.corr = 0    &amp;#10;    reaction_time = 0&amp;#10;if drivingLexicalTask:&amp;#10;    scoreScreen[&quot;driving_lexical&quot;][&quot;accuracy&quot;].append(lexical_response.corr)&amp;#10;    if reaction_time &gt; minimum_acceptable_rt:&amp;#10;        scoreScreen[&quot;driving_lexical&quot;][&quot;reaction_time&quot;].append(reaction_time)&amp;#10;elif lexicalOnlyTask:&amp;#10;    scoreScreen[&quot;lexical_only&quot;][&quot;accuracy&quot;].append(lexical_response.corr)&amp;#10;    if reaction_time &gt; minimum_acceptable_rt:&amp;#10;        scoreScreen[&quot;lexical_only&quot;][&quot;reaction_time&quot;].append(reaction_time)&amp;#10;&amp;#10;&amp;#10;thisExp.addData('resp_corrected_rt', reaction_time);&amp;#10;thisExp.addData('resp_accuracy', lexical_response.corr);&amp;#10;if staircaseUpdateEnabled and staircaseEnabled:    &amp;#10;    thisExp.addData('st_stepSizeFrames', staircase_dict[current_font].stepSize)&amp;#10;    thisExp.addData('st_stepSizeDuration', staircase_dict[current_font].stepSize * secPerFrame);   &amp;#10;    thisExp.addData('st_font', current_font)&amp;#10;    thisExp.addData('st_trial_number', staircase_dict[current_font].nPresented + 1)&amp;#10;    thisExp.addData('st_nDown', staircase_dict[current_font].nDown)&amp;#10;    staircase_dict[current_font].update(lexical_response.corr)&amp;#10;    # register reversals after the update to &amp;#10;    # accurately mark the reversal trial&amp;#10;    thisExp.addData('st_is_reversal', (staircase_dict[current_font].selfSign * staircase_dict[current_font].lastSign) == -1)&amp;#10;    thisExp.addData('st_cumulative_reversals', staircase_dict[current_font].nReversals)    &amp;#10;else:&amp;#10;    thisExp.addData('st_stepSizeFrames', None)&amp;#10;    thisExp.addData('st_stepSizeDuration', None);      &amp;#10;    thisExp.addData('st_font', None);       &amp;#10;    thisExp.addData('st_is_reversal', None);&amp;#10;    thisExp.addData('st_cumulative_reversals', None);&amp;#10;    thisExp.addData('st_trial_number', None);&amp;#10;    thisExp.addData('st_nDown', None);     &amp;#10;    &amp;#10;    &amp;#10;practiceBlockN = 4&amp;#10;if clutterChangeEnabled:    &amp;#10;    thisExp.addData('change_order_indices', clutter_change_order_indices[blocks.thisN - practiceBlockN]);   &amp;#10;    if clutterProgressionEnabled:     &amp;#10;        if trials.thisN == clutter_change_order_indices[blocks.thisN - practiceBlockN][change_iteration]:&amp;#10;            if task_name == &quot;full_task_training&quot; or task_name == &quot;full_task_wo_driving_training&quot;:    &amp;#10;                print('clutter reverted training')&amp;#10;                revertClutterIcon(all_widgets, dynamic_clutter_icons, clutter_changed_icon_indices_practice[change_iteration])&amp;#10;            elif blocks.thisN &gt; practiceBlockN:&amp;#10;                print('clutter reverted test')&amp;#10;                revertClutterIcon(all_widgets, dynamic_clutter_icons, clutter_changed_icon_indices[change_iteration])&amp;#10;            change_iteration = change_iteration + 1&amp;#10;            &amp;#10;    if (len(clutter_change_order_indices[blocks.thisN - practiceBlockN]) - 1) &lt; change_iteration:&amp;#10;        print('clutter progression disabled')&amp;#10;        clutterProgressionEnabled = False&amp;#10;    else:&amp;#10;        print('clutter progression enabled')&amp;#10;        clutterProgressionEnabled = True" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="estimate_frame_durations_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="background_panel">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stimuli/panels/background_panel.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="background_panel" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="panel_layout.panel_position" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(panel_layout.panel_x_size, panel_layout.panel_y_size)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$trialDurationFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="panel1">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stimuli/panels/large_panel.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="panel1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(widget_regions[0]['x'], widget_regions[0]['y'])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(widget_regions[0]['width'], widget_regions[0]['height'])" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$trialDurationFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="panel2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stimuli/panels/small_panel.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="panel2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(widget_regions[1]['x'], widget_regions[1]['y'])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(widget_regions[1]['width'], widget_regions[1]['height'])" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$trialDurationFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="panel3">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stimuli/panels/small_panel.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="panel3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(widget_regions[2]['x'], widget_regions[2]['y'])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(widget_regions[2]['width'], widget_regions[2]['height'])" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$trialDurationFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="panel4">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stimuli/panels/small_panel.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="panel4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(widget_regions[3]['x'], widget_regions[3]['y'])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(widget_regions[3]['width'], widget_regions[3]['height'])" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$trialDurationFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="panel5">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stimuli/panels/small_panel.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="panel5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(widget_regions[4]['x'], widget_regions[4]['y'])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(widget_regions[4]['width'], widget_regions[4]['height'])" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$trialDurationFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="panel6">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stimuli/panels/large_panel.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="panel6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(widget_regions[5]['x'], widget_regions[5]['y'])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(widget_regions[5]['width'], widget_regions[5]['height'])" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$trialDurationFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="pre_mask">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$currentMaskImage" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="pre_mask" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(widget_regions[target_panel]['x'], widget_regions[target_panel]['y'])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="maskSize" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="$preMaskOffsetFrames" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$maskFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="post_mask">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$currentMaskImage" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="post_mask" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(widget_regions[target_panel]['x'], widget_regions[target_panel]['y'])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="maskSize" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="$postMaskOffsetFrames" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$maskFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="lexical_text">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="$current_font" valType="str" updates="set every repeat" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="stim_size * xheight_to_size" valType="num" updates="set every repeat" name="letterHeight"/>
        <Param val="lexical_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(widget_regions[target_panel]['x'], widget_regions[target_panel]['y'])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="$stimOffsetFrames" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$stimulus_frames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$text" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="fixation_cross">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="$current_font" valType="str" updates="set every repeat" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="stim_size * xheight_to_size" valType="num" updates="set every repeat" name="letterHeight"/>
        <Param val="fixation_cross" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(widget_regions[target_panel]['x'], widget_regions[target_panel]['y'])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$fixationFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="widget1_symbol1">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$all_widgets[0][&quot;image_components&quot;][&quot;engine&quot;][&quot;file&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="widget1_symbol1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctPositionSmall(all_widgets[0][&quot;image_components&quot;][&quot;engine&quot;][&quot;size_pixel&quot;], all_widgets[0][&quot;image_components&quot;][&quot;engine&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="$all_widgets[0][&quot;image_components&quot;][&quot;engine&quot;][&quot;size_pixel&quot;]" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$trialDurationFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="widget1_symbol2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$all_widgets[0][&quot;image_components&quot;][&quot;oil&quot;][&quot;file&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="widget1_symbol2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctPositionSmall(all_widgets[0][&quot;image_components&quot;][&quot;oil&quot;][&quot;size_pixel&quot;], all_widgets[0][&quot;image_components&quot;][&quot;oil&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="all_widgets[0][&quot;image_components&quot;][&quot;oil&quot;][&quot;size_pixel&quot;]" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$trialDurationFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="widget1_symbol3">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$all_widgets[0][&quot;image_components&quot;][&quot;tirepressure&quot;][&quot;file&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="widget1_symbol3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctPositionSmall(all_widgets[0][&quot;image_components&quot;][&quot;tirepressure&quot;][&quot;size_pixel&quot;], all_widgets[0][&quot;image_components&quot;][&quot;tirepressure&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="all_widgets[0][&quot;image_components&quot;][&quot;tirepressure&quot;][&quot;size_pixel&quot;]" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$trialDurationFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="widget1_text1">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="$textFont" valType="str" updates="set every repeat" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="text_size" valType="num" updates="set every repeat" name="letterHeight"/>
        <Param val="widget1_text1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctTextPosition(widget1_text1, all_widgets[0][&quot;text_components&quot;][&quot;duration&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$trialDurationFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$all_widgets[0][&quot;text_components&quot;][&quot;duration&quot;][&quot;text&quot;]" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="widget1_text2">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="$textFont" valType="str" updates="set every repeat" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="text_size" valType="num" updates="set every repeat" name="letterHeight"/>
        <Param val="widget1_text2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctTextPosition(widget1_text2, all_widgets[0][&quot;text_components&quot;][&quot;fuel&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$trialDurationFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$all_widgets[0][&quot;text_components&quot;][&quot;fuel&quot;][&quot;text&quot;]" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="widget1_text3">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="$textFont" valType="str" updates="set every repeat" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="text_size" valType="num" updates="set every repeat" name="letterHeight"/>
        <Param val="widget1_text3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctTextPosition(widget1_text3, all_widgets[0][&quot;text_components&quot;][&quot;distance&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$trialDurationFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$all_widgets[0][&quot;text_components&quot;][&quot;distance&quot;][&quot;text&quot;]" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="widget1_text4">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="$textFont" valType="str" updates="set every repeat" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="header_size" valType="num" updates="set every repeat" name="letterHeight"/>
        <Param val="widget1_text4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctTextPosition(widget1_text4, all_widgets[0][&quot;text_components&quot;][&quot;trip_header&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$trialDurationFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$all_widgets[0][&quot;text_components&quot;][&quot;trip_header&quot;][&quot;text&quot;]" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="header_wrap_width" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="widget2_symbol1">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$all_widgets[2][&quot;image_components&quot;][&quot;cardoor&quot;][&quot;file&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="widget2_symbol1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctPositionSmall(all_widgets[2][&quot;image_components&quot;][&quot;cardoor&quot;][&quot;size_pixel&quot;], all_widgets[2][&quot;image_components&quot;][&quot;cardoor&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="all_widgets[2][&quot;image_components&quot;][&quot;cardoor&quot;][&quot;size_pixel&quot;]" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$trialDurationFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="widget2_text1">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="$textFont" valType="str" updates="set every repeat" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="header_size" valType="num" updates="set every repeat" name="letterHeight"/>
        <Param val="widget2_text1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctTextPosition(widget2_text1, all_widgets[2][&quot;text_components&quot;][&quot;garage_header&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$trialDurationFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$all_widgets[2][&quot;text_components&quot;][&quot;garage_header&quot;][&quot;text&quot;]" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="header_wrap_width" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="widget2_text2">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="$textFont" valType="str" updates="set every repeat" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="text_size" valType="num" updates="set every repeat" name="letterHeight"/>
        <Param val="widget2_text2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctTextPosition(widget2_text2, all_widgets[2][&quot;text_components&quot;][&quot;garage_door&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$trialDurationFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$all_widgets[2][&quot;text_components&quot;][&quot;garage_door&quot;][&quot;text&quot;]" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="widget3_symbol1">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$all_widgets[3][&quot;image_components&quot;][&quot;carheat&quot;][&quot;file&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="widget3_symbol1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctPositionSmall(all_widgets[3][&quot;image_components&quot;][&quot;carheat&quot;][&quot;size_pixel&quot;], all_widgets[3][&quot;image_components&quot;][&quot;carheat&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="all_widgets[3][&quot;image_components&quot;][&quot;carheat&quot;][&quot;size_pixel&quot;]" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$trialDurationFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="widget3_text1">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="$textFont" valType="str" updates="set every repeat" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="temperature_size" valType="num" updates="set every repeat" name="letterHeight"/>
        <Param val="widget3_text1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctTextPosition(widget3_text1, all_widgets[3][&quot;text_components&quot;][&quot;temperature&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$trialDurationFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$all_widgets[3][&quot;text_components&quot;][&quot;temperature&quot;][&quot;text&quot;]" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="widget4_symbol1">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$all_widgets[4][&quot;image_components&quot;][&quot;media&quot;][&quot;file&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="widget4_symbol1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctPositionSmall(all_widgets[4][&quot;image_components&quot;][&quot;media&quot;][&quot;size_pixel&quot;], all_widgets[4][&quot;image_components&quot;][&quot;media&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="all_widgets[4][&quot;image_components&quot;][&quot;media&quot;][&quot;size_pixel&quot;]" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$trialDurationFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="widget4_text1">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="$textFont" valType="str" updates="set every repeat" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="battery_size" valType="num" updates="set every repeat" name="letterHeight"/>
        <Param val="widget4_text1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctTextPosition(widget4_text1, all_widgets[4][&quot;text_components&quot;][&quot;battery&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$trialDurationFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$all_widgets[4][&quot;text_components&quot;][&quot;battery&quot;][&quot;text&quot;]" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="widget4_text2">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="$textFont" valType="str" updates="set every repeat" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="battery_size" valType="num" updates="set every repeat" name="letterHeight"/>
        <Param val="widget4_text2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctTextPosition(widget4_text1, all_widgets[4][&quot;text_components&quot;][&quot;miles&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$trialDurationFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$all_widgets[4][&quot;text_components&quot;][&quot;miles&quot;][&quot;text&quot;]" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="widget5_text1">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="set every repeat" name="flip"/>
        <Param val="$textFont" valType="str" updates="set every repeat" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="day_size" valType="num" updates="set every repeat" name="letterHeight"/>
        <Param val="widget5_text1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="set every repeat" name="ori"/>
        <Param val="correctTextPosition(widget5_text1, all_widgets[1][&quot;text_components&quot;][&quot;date&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$trialDurationFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$all_widgets[1][&quot;text_components&quot;][&quot;date&quot;][&quot;text&quot;]" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="header_wrap_width" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="widget5_symbol1">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$all_widgets[1][&quot;image_components&quot;][&quot;fuel&quot;][&quot;file&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="widget5_symbol1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctPositionSmall(all_widgets[1][&quot;image_components&quot;][&quot;fuel&quot;][&quot;size_pixel&quot;], all_widgets[1][&quot;image_components&quot;][&quot;fuel&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="all_widgets[1][&quot;image_components&quot;][&quot;fuel&quot;][&quot;size_pixel&quot;]" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$trialDurationFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="widget5_symbol2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$all_widgets[1][&quot;image_components&quot;][&quot;ecosport&quot;][&quot;file&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="widget5_symbol2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctPositionSmall(all_widgets[1][&quot;image_components&quot;][&quot;ecosport&quot;][&quot;size_pixel&quot;], all_widgets[1][&quot;image_components&quot;][&quot;ecosport&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="all_widgets[1][&quot;image_components&quot;][&quot;ecosport&quot;][&quot;size_pixel&quot;]" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$trialDurationFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="widget5_symbol3">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$all_widgets[1][&quot;image_components&quot;][&quot;farlight&quot;][&quot;file&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="widget5_symbol3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctPositionSmall(all_widgets[1][&quot;image_components&quot;][&quot;farlight&quot;][&quot;size_pixel&quot;], all_widgets[1][&quot;image_components&quot;][&quot;farlight&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="all_widgets[1][&quot;image_components&quot;][&quot;farlight&quot;][&quot;size_pixel&quot;]" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$trialDurationFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="lexical_response">
        <Param val="'y','n'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$correct_ans" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="lexical_response" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$trialDurationFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="align_text">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="clutter_text1.alignText = &quot;left&quot;;&amp;#10;clutter_text2.alignText = &quot;left&quot;;&amp;#10;clutter_text3.alignText = &quot;left&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="alignment_var = &quot;left&quot;&amp;#10;&amp;#10;#&amp;#10;#widget1_text1.alignText = alignment_var&amp;#10;#widget1_text2.alignText = alignment_var&amp;#10;#widget1_text3.alignText = alignment_var&amp;#10;#widget1_text4.alignText = alignment_var&amp;#10;#&amp;#10;#widget2_text1.alignText = alignment_var&amp;#10;#widget2_text2.alignText = alignment_var&amp;#10;#&amp;#10;#widget5_text1.alignText = alignment_var&amp;#10;&amp;#10;&amp;#10;widget1_text4.bold = True&amp;#10;widget2_text1.bold = True&amp;#10;widget3_text1.bold = True&amp;#10;widget4_text1.bold = True&amp;#10;widget4_text2.bold = True&amp;#10;widget5_text1.bold = True&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="align_text" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="background_panel_3">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stimuli/panels/background_panel.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="background_panel_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="panel_layout.panel_position" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="dummy_panel_size" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="$trialDurationFrames" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <SoundComponent name="sound_cue">
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="hamming"/>
        <Param val="sound_cue" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="A" valType="str" updates="constant" name="sound"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$soundDuration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
        <Param val="soundVolume" valType="num" updates="set every repeat" name="volume"/>
      </SoundComponent>
    </Routine>
    <Routine name="routine_1"/>
    <Routine name="inter_trial_interval">
      <CodeComponent name="estimate_frame_durations">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="t_start_time = exp_clock.getTime()&amp;#10;t_frame_time = []&amp;#10;thisExp.addData('current_time', datetime.now().strftime(&quot;%H:%M:%S&quot;));&amp;#10;&amp;#10;if trials.thisN == 0:&amp;#10;    # skipping first trial to align text clutters (depcrecated but here, just in case)&amp;#10;    iti_duration = 0.1&amp;#10;    dummy_panel_size = [panel_layout.panel_x_size, panel_layout.panel_y_size]    &amp;#10;else:&amp;#10;    iti_duration = random.randint(iti_min*1000,iti_max*1000)/1000 # duration in msec units    &amp;#10;    dummy_panel_size = [1, 1]&amp;#10;thisExp.addData('iti_duration', iti_duration);&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="t_frame_time.append(round((exp_clock.getTime() - t_start_time)*1000,2))&amp;#10;&amp;#10;t_start_time = exp_clock.getTime()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData('trial_frame_durations', t_frame_time);&amp;#10;practiceBlockN = 4&amp;#10;if clutterProgressionEnabled and clutterChangeEnabled:&amp;#10;    if trials.thisN == clutter_change_order_indices[blocks.thisN - practiceBlockN][change_iteration]:        &amp;#10;        if task_name == &quot;full_task_training&quot; or task_name == &quot;full_task_wo_driving_training&quot;:&amp;#10;            thisExp.addData('clutter_changed_trial', clutter_change_order_indices[blocks.thisN - practiceBlockN][change_iteration]);                &amp;#10;            changeClutterIcon(all_widgets, dynamic_clutter_icons, clutter_changed_icon_indices_practice[change_iteration])&amp;#10;            print('****training clutter changed****')&amp;#10;            print(&quot;BLOCK: &quot;, blocks.thisN)&amp;#10;            print(&quot;change iteration: &quot;, change_iteration)&amp;#10;            &amp;#10;        elif blocks.thisN &gt; practiceBlockN:&amp;#10;            thisExp.addData('clutter_changed_trial', clutter_change_order_indices[blocks.thisN - practiceBlockN][change_iteration]);                &amp;#10;            changeClutterIcon(all_widgets, dynamic_clutter_icons, clutter_changed_icon_indices[change_iteration])         &amp;#10;            print('****test clutter changed****')&amp;#10;            print(&quot;BLOCK: &quot;, blocks.thisN)&amp;#10;            print(&quot;change iteration: &quot;, change_iteration)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="estimate_frame_durations" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="background_panel_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stimuli/panels/background_panel.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="background_panel_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="panel_layout.panel_position" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(panel_layout.panel_x_size, panel_layout.panel_y_size)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti_duration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="panel1_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stimuli/panels/large_panel.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="panel1_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(widget_regions[0]['x'], widget_regions[0]['y'])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(widget_regions[0]['width'], widget_regions[0]['height'])" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti_duration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="panel2_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stimuli/panels/small_panel.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="panel2_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(widget_regions[1]['x'], widget_regions[1]['y'])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(widget_regions[1]['width'], widget_regions[1]['height'])" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti_duration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="panel3_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stimuli/panels/small_panel.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="panel3_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(widget_regions[2]['x'], widget_regions[2]['y'])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(widget_regions[2]['width'], widget_regions[2]['height'])" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti_duration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="panel4_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stimuli/panels/small_panel.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="panel4_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(widget_regions[3]['x'], widget_regions[3]['y'])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(widget_regions[3]['width'], widget_regions[3]['height'])" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti_duration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="panel5_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stimuli/panels/small_panel.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="panel5_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(widget_regions[4]['x'], widget_regions[4]['y'])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(widget_regions[4]['width'], widget_regions[4]['height'])" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti_duration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="panel6_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stimuli/panels/large_panel.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="panel6_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(widget_regions[5]['x'], widget_regions[5]['y'])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(widget_regions[5]['width'], widget_regions[5]['height'])" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti_duration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="widget1_symbol1_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$all_widgets[0][&quot;image_components&quot;][&quot;engine&quot;][&quot;file&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="widget1_symbol1_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctPositionSmall(all_widgets[0][&quot;image_components&quot;][&quot;engine&quot;][&quot;size_pixel&quot;], all_widgets[0][&quot;image_components&quot;][&quot;engine&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="$all_widgets[0][&quot;image_components&quot;][&quot;engine&quot;][&quot;size_pixel&quot;]" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti_duration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="widget1_symbol2_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$all_widgets[0][&quot;image_components&quot;][&quot;oil&quot;][&quot;file&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="widget1_symbol2_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctPositionSmall(all_widgets[0][&quot;image_components&quot;][&quot;oil&quot;][&quot;size_pixel&quot;], all_widgets[0][&quot;image_components&quot;][&quot;oil&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="all_widgets[0][&quot;image_components&quot;][&quot;oil&quot;][&quot;size_pixel&quot;]" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti_duration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="widget1_symbol3_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$all_widgets[0][&quot;image_components&quot;][&quot;tirepressure&quot;][&quot;file&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="widget1_symbol3_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctPositionSmall(all_widgets[0][&quot;image_components&quot;][&quot;tirepressure&quot;][&quot;size_pixel&quot;], all_widgets[0][&quot;image_components&quot;][&quot;tirepressure&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="all_widgets[0][&quot;image_components&quot;][&quot;tirepressure&quot;][&quot;size_pixel&quot;]" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti_duration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="widget1_text1_2">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="$textFont" valType="str" updates="set every repeat" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="text_size" valType="num" updates="set every repeat" name="letterHeight"/>
        <Param val="widget1_text1_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctTextPosition(widget1_text1, all_widgets[0][&quot;text_components&quot;][&quot;duration&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti_duration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$all_widgets[0][&quot;text_components&quot;][&quot;duration&quot;][&quot;text&quot;]" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="widget1_text2_2">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="$textFont" valType="str" updates="set every repeat" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="text_size" valType="num" updates="set every repeat" name="letterHeight"/>
        <Param val="widget1_text2_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctTextPosition(widget1_text2, all_widgets[0][&quot;text_components&quot;][&quot;fuel&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti_duration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$all_widgets[0][&quot;text_components&quot;][&quot;fuel&quot;][&quot;text&quot;]" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="widget1_text3_2">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="$textFont" valType="str" updates="set every repeat" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="text_size" valType="num" updates="set every repeat" name="letterHeight"/>
        <Param val="widget1_text3_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctTextPosition(widget1_text3, all_widgets[0][&quot;text_components&quot;][&quot;distance&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti_duration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$all_widgets[0][&quot;text_components&quot;][&quot;distance&quot;][&quot;text&quot;]" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="widget1_text4_2">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="$textFont" valType="str" updates="set every repeat" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="header_size" valType="num" updates="set every repeat" name="letterHeight"/>
        <Param val="widget1_text4_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctTextPosition(widget1_text4, all_widgets[0][&quot;text_components&quot;][&quot;trip_header&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti_duration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$all_widgets[0][&quot;text_components&quot;][&quot;trip_header&quot;][&quot;text&quot;]" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="header_wrap_width" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="widget2_symbol1_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$all_widgets[2][&quot;image_components&quot;][&quot;cardoor&quot;][&quot;file&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="widget2_symbol1_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctPositionSmall(all_widgets[2][&quot;image_components&quot;][&quot;cardoor&quot;][&quot;size_pixel&quot;], all_widgets[2][&quot;image_components&quot;][&quot;cardoor&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="all_widgets[2][&quot;image_components&quot;][&quot;cardoor&quot;][&quot;size_pixel&quot;]" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti_duration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="widget2_text1_2">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="$textFont" valType="str" updates="set every repeat" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="header_size" valType="num" updates="set every repeat" name="letterHeight"/>
        <Param val="widget2_text1_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctTextPosition(widget2_text1, all_widgets[2][&quot;text_components&quot;][&quot;garage_header&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti_duration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$all_widgets[2][&quot;text_components&quot;][&quot;garage_header&quot;][&quot;text&quot;]" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="header_wrap_width" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="widget2_text2_2">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="$textFont" valType="str" updates="set every repeat" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="text_size" valType="num" updates="set every repeat" name="letterHeight"/>
        <Param val="widget2_text2_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctTextPosition(widget2_text2, all_widgets[2][&quot;text_components&quot;][&quot;garage_door&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti_duration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$all_widgets[2][&quot;text_components&quot;][&quot;garage_door&quot;][&quot;text&quot;]" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="widget3_symbol1_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$all_widgets[3][&quot;image_components&quot;][&quot;carheat&quot;][&quot;file&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="widget3_symbol1_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctPositionSmall(all_widgets[3][&quot;image_components&quot;][&quot;carheat&quot;][&quot;size_pixel&quot;], all_widgets[3][&quot;image_components&quot;][&quot;carheat&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="all_widgets[3][&quot;image_components&quot;][&quot;carheat&quot;][&quot;size_pixel&quot;]" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti_duration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="widget3_text1_2">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="$textFont" valType="str" updates="set every repeat" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="temperature_size" valType="num" updates="set every repeat" name="letterHeight"/>
        <Param val="widget3_text1_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctTextPosition(widget3_text1, all_widgets[3][&quot;text_components&quot;][&quot;temperature&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti_duration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$all_widgets[3][&quot;text_components&quot;][&quot;temperature&quot;][&quot;text&quot;]" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="widget4_symbol1_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$all_widgets[4][&quot;image_components&quot;][&quot;media&quot;][&quot;file&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="widget4_symbol1_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctPositionSmall(all_widgets[4][&quot;image_components&quot;][&quot;media&quot;][&quot;size_pixel&quot;], all_widgets[4][&quot;image_components&quot;][&quot;media&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="all_widgets[4][&quot;image_components&quot;][&quot;media&quot;][&quot;size_pixel&quot;]" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti_duration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="widget4_text1_2">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="$textFont" valType="str" updates="set every repeat" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="battery_size" valType="num" updates="set every repeat" name="letterHeight"/>
        <Param val="widget4_text1_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctTextPosition(widget4_text1, all_widgets[4][&quot;text_components&quot;][&quot;battery&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti_duration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$all_widgets[4][&quot;text_components&quot;][&quot;battery&quot;][&quot;text&quot;]" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="widget4_text2_2">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="$textFont" valType="str" updates="set every repeat" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="battery_size" valType="num" updates="set every repeat" name="letterHeight"/>
        <Param val="widget4_text2_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctTextPosition(widget4_text1, all_widgets[4][&quot;text_components&quot;][&quot;miles&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti_duration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$all_widgets[4][&quot;text_components&quot;][&quot;miles&quot;][&quot;text&quot;]" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="widget5_text1_2">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="set every repeat" name="flip"/>
        <Param val="$textFont" valType="str" updates="set every repeat" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="day_size" valType="num" updates="set every repeat" name="letterHeight"/>
        <Param val="widget5_text1_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="set every repeat" name="ori"/>
        <Param val="correctTextPosition(widget5_text1, all_widgets[1][&quot;text_components&quot;][&quot;date&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti_duration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$all_widgets[1][&quot;text_components&quot;][&quot;date&quot;][&quot;text&quot;]" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="header_wrap_width" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="widget5_symbol1_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$all_widgets[1][&quot;image_components&quot;][&quot;fuel&quot;][&quot;file&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="widget5_symbol1_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctPositionSmall(all_widgets[1][&quot;image_components&quot;][&quot;fuel&quot;][&quot;size_pixel&quot;], all_widgets[1][&quot;image_components&quot;][&quot;fuel&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="all_widgets[1][&quot;image_components&quot;][&quot;fuel&quot;][&quot;size_pixel&quot;]" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti_duration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="widget5_symbol2_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$all_widgets[1][&quot;image_components&quot;][&quot;ecosport&quot;][&quot;file&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="widget5_symbol2_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctPositionSmall(all_widgets[1][&quot;image_components&quot;][&quot;ecosport&quot;][&quot;size_pixel&quot;], all_widgets[1][&quot;image_components&quot;][&quot;ecosport&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="all_widgets[1][&quot;image_components&quot;][&quot;ecosport&quot;][&quot;size_pixel&quot;]" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti_duration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="widget5_symbol3_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$all_widgets[1][&quot;image_components&quot;][&quot;farlight&quot;][&quot;file&quot;]" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="widget5_symbol3_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="correctPositionSmall(all_widgets[1][&quot;image_components&quot;][&quot;farlight&quot;][&quot;size_pixel&quot;], all_widgets[1][&quot;image_components&quot;][&quot;farlight&quot;][&quot;position_pixel&quot;])" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="all_widgets[1][&quot;image_components&quot;][&quot;farlight&quot;][&quot;size_pixel&quot;]" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti_duration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <CodeComponent name="align_text_2">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="clutter_text1.alignText = &quot;left&quot;;&amp;#10;clutter_text2.alignText = &quot;left&quot;;&amp;#10;clutter_text3.alignText = &quot;left&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="alignment_var = &quot;left&quot;&amp;#10;&amp;#10;#&amp;#10;#widget1_text1.alignText = alignment_var&amp;#10;#widget1_text2.alignText = alignment_var&amp;#10;#widget1_text3.alignText = alignment_var&amp;#10;#widget1_text4.alignText = alignment_var&amp;#10;#&amp;#10;#widget2_text1.alignText = alignment_var&amp;#10;#widget2_text2.alignText = alignment_var&amp;#10;#&amp;#10;#widget5_text1.alignText = alignment_var&amp;#10;&amp;#10;&amp;#10;widget1_text4.bold = True&amp;#10;widget2_text1.bold = True&amp;#10;widget3_text1.bold = True&amp;#10;#widget4_text1.bold = True&amp;#10;#widget4_text2.bold = True&amp;#10;widget5_text1.bold = True&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="align_text_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="background_panel_4">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stimuli/panels/background_panel.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="background_panel_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="panel_layout.panel_position" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="dummy_panel_size" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti_duration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <CodeComponent name="text_align">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="alignment_var = &quot;left&quot;;&amp;#10;widget1_text4_2.bold = true;&amp;#10;widget2_text1_2.bold = true;&amp;#10;widget3_text1_2.bold = true;&amp;#10;widget4_text1_2.bold = true;&amp;#10;widget4_text2_2.bold = true;&amp;#10;widget5_text1_2.bold = true;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;alignment_var = &quot;left&quot;&amp;#10;&amp;#10;#&amp;#10;#widget1_text1_2.alignText = alignment_var&amp;#10;#widget1_text2_2.alignText = alignment_var&amp;#10;#widget1_text3_2.alignText = alignment_var&amp;#10;#widget1_text4_2.alignText = alignment_var&amp;#10;#&amp;#10;#widget2_text1_2.alignText = alignment_var&amp;#10;#widget2_text2_2.alignText = alignment_var&amp;#10;#&amp;#10;#widget5_text1_2.alignText = alignment_var&amp;#10;&amp;#10;widget1_text4_2.bold = True&amp;#10;widget2_text1_2.bold = True&amp;#10;widget3_text1_2.bold = True&amp;#10;widget4_text1_2.bold = True&amp;#10;widget4_text2_2.bold = True&amp;#10;widget5_text1_2.bold = True&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="text_align" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="get_trials">
      <CodeComponent name="extract_trials">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="all_word_trials = range(0, 759)&amp;#10;all_nonword_trials = range(764, 1256)&amp;#10;maxword_no = 759&amp;#10;maxnonword_no = 1256&amp;#10;staircase_dict = {}" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="current_WORD_trials = trialSampling(all_word_trials, word_trial_count)&amp;#10;current_NONWORD_trials = trialSampling(all_nonword_trials, nonword_trial_count)&amp;#10;&amp;#10;all_word_trials = removeElements(all_word_trials, current_WORD_trials)&amp;#10;all_nonword_trials = removeElements(all_nonword_trials, current_NONWORD_trials)&amp;#10;&amp;#10;current_trials = joinAndShuffle(current_WORD_trials, current_NONWORD_trials)&amp;#10;current_trials = [0] + current_trials&amp;#10;print('block print: ', current_font)&amp;#10;&amp;#10;if blocks.thisN == 2 or blocks.thisN == 3 or blocks.thisN == 7 or blocks.thisN == 8:&amp;#10;    continueRoutine = False&amp;#10;    instructionDuration = 0.01&amp;#10;else:&amp;#10;    instructionDuration = 999&amp;#10;&amp;#10;instr_y = win.size[1] * 2/3&amp;#10;instr_x = instr_y * wh_ratio&amp;#10;&amp;#10;staircaseEnabled = blocks.thisN &gt; 0 and blocks.thisN &lt; 4&amp;#10;drivingLexicalTask = blocks.thisN &gt; 4&amp;#10;lexicalOnlyTask = staircaseEnabled&amp;#10;&amp;#10;if staircaseEnabled:    &amp;#10;    if (blocks.thisN &lt; 2):&amp;#10;        trialsPerStaircase = 51&amp;#10;    elif blocks.thisN == 2:&amp;#10;        trialsPerStaircase = 60    &amp;#10;    startFrames = getFrames(0.200, secPerFrame)&amp;#10;    staircase_dict[current_font] = staircaseFunction(trialsPerStaircase, trialsPerStaircase, startFrames, 1, 3, secPerFrame)&amp;#10;        &amp;#10;&amp;#10;&amp;#10;# used for iterating over change-order-indices, ++ every time clutter changes.&amp;#10;change_iteration = 0 &amp;#10;&amp;#10;print(clutterChangeEnabled, type(clutterChangeEnabled))&amp;#10;clutterProgressionEnabled = True" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if blocks.thisN == 0:&amp;#10;    exp_start_time = exp_clock.getTime()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="extract_trials" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="background_panel_5">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stimuli/panels/background_panel.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="background_panel_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="panel_layout.panel_position" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(panel_layout.panel_x_size, panel_layout.panel_y_size)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$instructionDuration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$instructionDuration" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <ImageComponent name="instruction_image">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$instruction_image_file" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="instruction_image" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, win.size[1]/6)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(instr_x, instr_y)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$instructionDuration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
    </Routine>
    <Routine name="finish_instructions">
      <CodeComponent name="prepareScores">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="for key, val in scoreScreen.items():&amp;#10;    scoreScreen[key][&quot;mean_acc&quot;] = sum(scoreScreen[key][&quot;accuracy&quot;]) / len(scoreScreen[key][&quot;accuracy&quot;])&amp;#10;    if len(scoreScreen[key][&quot;accuracy&quot;]):&amp;#10;        scoreScreen[key][&quot;mean_acc&quot;] = sum(scoreScreen[key][&quot;accuracy&quot;]) / len(scoreScreen[key][&quot;accuracy&quot;])&amp;#10;    else:&amp;#10;        scoreScreen[key][&quot;mean_acc&quot;] = 0&amp;#10;        &amp;#10;    if len(scoreScreen[key][&quot;reaction_time&quot;]) &gt; 0:&amp;#10;        scoreScreen[key][&quot;mean_rt&quot;] = sum(scoreScreen[key][&quot;reaction_time&quot;]) / len(scoreScreen[key][&quot;reaction_time&quot;])&amp;#10;    else:&amp;#10;        scoreScreen[key][&quot;mean_rt&quot;] = 0&amp;#10;    scoreScreen[key][&quot;percent_acc&quot;] = str(round(scoreScreen[key][&quot;mean_acc&quot;] *  100)) + &quot;%&quot;&amp;#10;    scoreScreen[key][&quot;mean_rt_text&quot;] = str(round(scoreScreen[key][&quot;mean_rt&quot;], 3)) + &quot; seconds.&quot;&amp;#10;&amp;#10;scoreText1 = &quot;You've responded &quot; + scoreScreen[&quot;lexical_only&quot;][&quot;percent_acc&quot;] + &quot; of trials correctly with average reaction time of &quot; + scoreScreen[&quot;lexical_only&quot;][&quot;mean_rt_text&quot;]&amp;#10;scoreText2 = &quot;You've responded &quot; + scoreScreen[&quot;driving_lexical&quot;][&quot;percent_acc&quot;] + &quot; of trials correctly during driving and lexical task with average reaction time of &quot; + scoreScreen[&quot;driving_lexical&quot;][&quot;mean_rt_text&quot;]&amp;#10;print(&quot;score screen dict: &quot;, json.dumps(scoreScreen, indent=4))&amp;#10;showScoreBothTasks = False&amp;#10;if showScoreBothTasks:&amp;#10;    initialText = &quot;Experiment is finished, thank you! Your performance for each task is outlined below.&quot;&amp;#10;    scoreTextWhole = &quot;\n\n&quot;.join([initialText, &quot;Lexical Only Task:&quot;, scoreText1, &quot;Driving and Lexical Task:&quot;, scoreText2])&amp;#10;else:&amp;#10;    initialText = &quot;Experiment is finished, thank you! Your performance is outlined below.&quot;&amp;#10;    scoreTextWhole = &quot;\n\n&quot;.join([initialText, &quot;Driving and Lexical Task:&quot;, scoreText2])" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="prepareScores" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="background_panel_6">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stimuli/panels/background_panel.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="background_panel_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="panel_layout.panel_position" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(panel_layout.panel_x_size, panel_layout.panel_y_size)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="finish_text">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="35" valType="num" updates="constant" name="letterHeight"/>
        <Param val="finish_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="panel_layout.panel_position" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$scoreTextWhole" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="win.size[0] * 0.85" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="finish_key">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="finish_key" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="initialization"/>
    <LoopInitiator loopType="TrialHandler" name="blocks">
      <Param name="Selected rows" updates="None" val="$block_rows" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$blocks_file" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="blocks" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="get_trials"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="$current_trials" valType="str"/>
      <Param name="conditions" updates="None" val="[{'text': 'accent', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'aching', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'adding', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'advent', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'advise', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'affect', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'agrees', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'aiming', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'alight', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'allied', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'allows', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'amazed', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'angels', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'angles', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'annual', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'appear', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'archer', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'ardent', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'argues', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'arises', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'arouse', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'assert', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'assets', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'assure', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'attack', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'avoids', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'backed', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'bakery', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'ballet', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'banged', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'banned', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'barbed', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'barely', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'barker', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'barman', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'barrel', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'basins', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'bathed', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'battle', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'beards', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'beasts', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'beauty', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'become', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'behave', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'beings', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'beside', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'bigger', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'biting', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'bitter', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'blades', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'blazed', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'blight', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'blocks', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'boards', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'boiled', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'boldly', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'bombed', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'booked', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'border', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'borrow', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'bother', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'bought', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'bounds', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'bowled', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'bowman', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'braced', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'brakes', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'brandy', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'breaks', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'breeds', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'bricks', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'bright', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'broken', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'bubble', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'budget', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'builds', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'bumped', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'bunker', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'burned', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'bushes', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'butler', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'button', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'cables', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'caller', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'calves', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'camped', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'canals', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'cancer', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'canned', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'cannot', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'canyon', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'career', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'carpet', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'carved', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'caster', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'cattle', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'caused', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'ceased', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'cellar', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'census', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'chairs', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'change', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'charms', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'chased', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'cheeks', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'cherry', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'chewed', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'choked', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'chores', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'chunks', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'cities', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'clocks', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'closer', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'closet', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'clouds', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'clover', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'coarse', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'cocked', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'coffin', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'colder', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'collar', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'combat', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'comedy', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'commit', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'convey', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'cooked', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'cooled', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'coolly', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'copies', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'copper', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'costly', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'county', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'courts', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'covert', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'cracks', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'crater', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'creamy', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'crimes', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'crisis', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'cruise', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'crying', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'curled', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'curses', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'curves', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'damned', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'dancer', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'danger', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'darker', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'dashed', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'dawned', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'dealer', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'debate', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'deceit', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'decide', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'deeper', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'defect', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'defied', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'degree', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'demand', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'demons', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'denied', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'dental', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'depend', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'deputy', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'detail', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'device', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'devout', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'digest', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'dinner', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'direct', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'dishes', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'dismay', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'divide', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'diving', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'donkey', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'dotted', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'doubly', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'drains', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'drawer', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'dreamt', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'dreary', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'drinks', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'driver', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'drying', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'dumped', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'dusted', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'easier', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'eating', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'echoes', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'effect', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'eighty', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'elders', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'elites', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'enable', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'engage', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'ensure', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'entire', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'envied', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'erotic', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'essays', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'exceed', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'excite', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'exiled', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'expand', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'expert', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'extend', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'facial', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'fading', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'farmed', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'faster', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'faults', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'feared', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'felled', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'fences', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'fierce', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'filing', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'filter', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'finely', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'firing', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'fisher', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'fitted', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'flakes', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'flanks', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'flight', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'floods', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'floral', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'flower', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'flying', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'folded', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'follow', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'fooled', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'forced', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'forest', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'forget', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'formal', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'former', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'fought', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'framed', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'freeze', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'fright', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'fronts', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'frying', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'funded', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'gained', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'gallon', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'gambit', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'gaping', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'garlic', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'gather', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'geared', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'genius', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'gently', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'giants', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'giggle', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'ginger', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'glands', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'glassy', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'gloomy', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'gloves', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'golden', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'grades', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'granny', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'grapes', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'grated', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'graves', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'greasy', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'grimly', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'groove', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'ground', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'grunts', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'guided', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'gunner', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'hailed', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'halves', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'handed', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'hanged', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'hasten', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'hauled', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'headed', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'health', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'hearth', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'hearty', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'heaths', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'heaven', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'hedges', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'helmet', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'heresy', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'heroic', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'hidden', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'higher', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'hiring', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'hoarse', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'holder', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'homely', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'hoover', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'hoping', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'hordes', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'horses', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'hotels', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'hounds', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'houses', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'humane', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'humble', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'hunger', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'hunter', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'hurled', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'hushed', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'immune', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'import', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'inches', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'inform', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'inland', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'insect', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'inside', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'intent', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'invest', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'inward', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'issued', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'jacket', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'jammed', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'jersey', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'jockey', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'joints', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'judged', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'juices', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'jumped', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'juries', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'kettle', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'killer', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'kissed', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'kitten', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'labels', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'ladder', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'landed', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'larger', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'lashed', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'lasted', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'lately', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'latest', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'laughs', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'lavish', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'layers', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'layman', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'leaked', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'leaped', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'learnt', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'legion', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'lessen', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'lesson', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'levels', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'licked', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'lights', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'liking', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'linger', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'linked', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'listen', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'litter', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'lively', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'living', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'loaves', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'locate', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'locker', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'lodger', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'longed', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'looked', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'loosen', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'losses', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'lovely', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'loving', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'maiden', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'makers', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'manage', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'manned', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'mantle', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'marble', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'marina', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'marked', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'martin', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'masses', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'mating', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'matted', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'mature', 'wordNonword': 'w', 'currentFont': 'Arial'}, {'text': 'medium', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'menace', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'mental', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'merger', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'metres', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'middle', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'mighty', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'miller', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'miners', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'misery', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'missed', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'mister', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'mixing', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'mocked', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'modest', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'moment', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'months', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'morals', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'mortal', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'mostly', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'motion', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'motors', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'mouths', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'muddle', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'muster', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'muzzle', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'nailed', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'naming', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'nation', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'nature', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'nearer', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'neatly', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'nerves', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'nights', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'nipple', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'noises', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'notice', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'notion', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'novice', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'nursed', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'object', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'onions', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'opened', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'orange', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'otters', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'outing', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'outset', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'pacing', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'packet', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'pained', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'palace', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'papers', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'parent', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'parked', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'partly', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'passes', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'patent', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'patron', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'paused', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'paying', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'pebble', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'peered', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'pelvis', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'period', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'permit', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'petals', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'phases', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'phoney', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'picked', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'pieces', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'pilots', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'pistol', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'placed', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'placid', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'plains', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'planet', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'plants', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'played', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'pledge', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'plough', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'points', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'poison', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'police', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'polish', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'pollen', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'popped', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'posing', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'posted', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'potent', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'pounds', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'powder', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'praise', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'prayer', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'prices', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'prince', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'prison', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'prizes', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'proved', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'proves', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'pulled', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'purely', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'pushed', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'puzzle', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'queues', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'quoted', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'rabbit', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'racing', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'racist', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'radios', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'ragged', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'rained', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'raises', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'ranged', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'rarely', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'rather', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'ration', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'ravine', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'reader', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'reared', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'rebels', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'recipe', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'reckon', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'reduce', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'reform', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'refuse', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'regard', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'region', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'relate', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'relief', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'remand', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'remote', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'render', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'rented', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'repeal', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'report', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'resign', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'resort', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'retail', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'retire', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'revive', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'rhymes', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'richer', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'ridden', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'ridges', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'rifles', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'ringed', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'rising', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'rivers', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'robbed', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'rocket', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'roller', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'rotten', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'roused', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'rubbed', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'rubble', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'ruined', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'runner', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'rushes', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'sacred', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'safely', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'safety', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'sailor', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'salmon', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'salted', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'sanity', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'savage', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'saying', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'scared', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'scheme', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'scores', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'scouts', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'scraps', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'screen', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'script', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'sealed', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'season', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'sector', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'seemed', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'selves', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'senior', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'senses', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'serial', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'served', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'settee', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'severe', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'sexism', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'shaded', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'shafts', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'shakes', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'shaped', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'shared', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'sharks', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'sheets', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'sherry', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'shirts', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'shocks', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'shores', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'shouts', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'shovel', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'shower', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'shreds', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'shriek', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'shrine', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'shrubs', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'sickle', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'sighed', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'signed', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'simmer', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'simply', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'single', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'sister', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'skills', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'skirts', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'slacks', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'sleeps', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'sliced', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'slides', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'slopes', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'slowed', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'smells', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'smiled', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'smithy', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'smooth', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'snatch', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'soared', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'sodium', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'softer', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'solely', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'solved', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'sorted', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'sounds', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'spaced', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'spared', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'speaks', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'speeds', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'spends', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'spikes', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'spiral', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'spoilt', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'sponge', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'sports', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'sprays', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'sprung', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'squire', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'stacks', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'staged', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'stains', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'stakes', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'stalls', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'stance', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'starch', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'stares', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'stated', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'statue', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'stayed', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'steaks', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'sticks', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'stocks', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'stolen', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'stones', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'stored', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'storms', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'stoves', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'straps', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'stream', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'strewn', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'strife', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'string', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'strive', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'stroke', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'strong', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'stuffy', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'styles', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'subtle', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'sucked', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'suffer', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'summer', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'sunday', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'supper', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'supply', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'survey', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'sweaty', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'sweeps', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'swings', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'swivel', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'tackle', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'taking', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'taller', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'tanned', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'tasted', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'taught', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'teased', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'tender', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'tested', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'themes', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'thesis', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'thinks', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'thorns', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'thread', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'thrill', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'throat', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'throng', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'throws', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'thumbs', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'tidied', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'tights', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'timber', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'tipped', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'titles', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'topics', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'tossed', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'towels', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'traced', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'tracks', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'traded', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'trails', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'traits', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'travel', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'treaty', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'trends', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'trials', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'tricks', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'trifle', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'troops', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'trucks', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'trusts', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'tucked', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'tunnel', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'turner', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'twitch', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'unable', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'unduly', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'uneasy', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'united', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'urgent', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'valley', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'values', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'vanish', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'varied', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'vastly', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'verbal', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'versus', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'viable', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'viewed', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'voices', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'voting', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'waited', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'waking', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'walker', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'wallet', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'wanted', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'warmed', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'warmly', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'warren', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'wasted', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'waters', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'waving', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'weaker', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'wealth', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'wedged', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'weighs', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'whales', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'whites', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'wicked', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'wicket', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'widest', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'willed', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'window', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'winked', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'winter', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'wisely', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'wishes', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'wonder', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'wooden', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'worked', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'worlds', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'wrench', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'wrists', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'writes', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'yearly', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'yellow', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'yields', 'wordNonword': 'w', 'currentFont': 'Times'}, {'text': 'abroar', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'absors', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'accurn', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'acrong', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'acrown', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'actiod', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'actist', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'adving', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'affort', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'afrain', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'afring', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'almose', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'almour', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'amoked', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'anglen', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'anited', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'ansame', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'anside', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'anyong', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'appent', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'aroall', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'aroots', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'arowed', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'arthma', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'aslack', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'assues', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'astack', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'augger', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'avents', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'baiter', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'beally', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'becade', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'becond', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'becred', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'befect', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'befors', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'befory', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'befust', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'behing', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'belsey', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'bethed', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'beture', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'beyone', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'beyons', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'bikely', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'bither', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'bloore', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'boarry', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'bogger', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'booket', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'borkes', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'bothed', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'botion', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'bouple', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'braing', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'branda', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'brener', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'brient', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'britch', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'bruset', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'bulike', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'calest', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'calles', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'caming', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'canded', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'canger', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'caturs', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'cemate', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'chadon', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'chaire', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'chaped', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'chaven', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'chergy', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'chirit', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'chough', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'chound', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'chrose', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'churce', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'cindle', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'cittes', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'clance', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'cleame', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'clerch', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'codier', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'colica', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'colled', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'colvey', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'comily', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'condow', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'copple', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'corges', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'couded', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'counda', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'cource', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'creful', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'cright', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'crused', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'dancis', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'danual', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'deaded', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'decial', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'decred', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'defore', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'degent', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'demost', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'desils', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'desuld', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'detate', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'dindon', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'dintem', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'direal', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'disted', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'divage', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'dourse', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'dreces', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'dryins', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'durked', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'durond', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'duther', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'easish', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'eastal', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'eather', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'effail', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'effers', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'efficy', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'eigher', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'eitter', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'eldely', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'eleede', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'endius', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'enemed', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'enerly', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'engles', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'enotic', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'enound', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'entent', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'eround', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'essuld', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'eurvey', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'evence', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'excely', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'exilly', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'fabour', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'fainge', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'famaid', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'famels', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'famens', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'famore', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'fample', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'farket', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'fasson', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'fathes', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'fatiod', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'fature', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'feases', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'fering', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'fielve', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'figher', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'filece', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'fiside', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'fizark', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'folica', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'folled', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'foread', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'foring', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'formly', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'forned', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'fossed', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'foyful', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'fraven', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'frefee', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'frents', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'frings', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'futhes', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'futurn', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'gaings', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'gapper', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'garger', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'garror', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'gengle', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'geoped', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'gerits', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'gerson', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'gilked', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'golded', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'gother', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'grayed', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'groked', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'grople', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'groven', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'growly', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'guangs', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'guiled', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'guings', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'habiet', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'hander', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'hanter', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'hapeen', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'hartin', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'havide', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'havies', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'havold', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'heamed', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'hearry', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'hellet', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'honged', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'horket', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'houble', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'houply', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'hunage', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'ideast', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'incher', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'indern', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'insays', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'insind', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'inswer', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'islade', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'islest', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'itsely', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'jacton', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'jerice', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'jerise', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'jewist', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'judger', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'junces', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'junnot', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'killow', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'kister', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'labous', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'lareet', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'larves', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'latiet', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'lawnet', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'learly', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'lentre', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'lettle', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'letton', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'likels', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'listal', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'lithed', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'lithin', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'lituty', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'livied', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'localm', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'lodera', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'lonexe', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'lontal', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'lontin', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'lontre', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'looden', 'wordNonword': 'nw', 'currentFont': 'Arial'}, {'text': 'lostes', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'maints', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'mannot', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'mardly', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'marror', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'mathes', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'matral', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'mattly', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'memage', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'memies', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'meraid', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'merind', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'metacy', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'middly', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'mobody', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'modeed', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'modely', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'modger', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'momend', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'mongle', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'moppes', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'motack', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'motely', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'moting', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'motire', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'movels', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'murice', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'musser', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'mutice', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'mystal', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'nather', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'nathma', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'neargy', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'neated', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'nicide', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'nobour', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'noding', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'normly', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'nottle', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'numble', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'numost', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'nurden', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'oblool', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'occent', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'offore', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'offsed', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'opents', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'oppect', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'orives', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'othems', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'ousher', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'oxyget', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'papect', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'parger', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'passil', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'pattle', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'peoper', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'peopts', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'peorge', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'perech', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'perice', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'perist', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'permal', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'perses', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'pervas', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'perver', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'phound', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'pithop', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'placks', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'plange', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'plazil', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'pleato', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'poings', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'polded', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'poliet', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'polles', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'polume', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'porson', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'pottle', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'poupon', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'pourse', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'powars', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'prease', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'preect', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'prient', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'pringe', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'prough', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'prount', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'publed', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'pubtle', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'puping', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'pussed', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'radget', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'rantal', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'ratred', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'rattor', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'rature', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'reaket', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'reases', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'reaths', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'rebath', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'recame', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'recona', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'recore', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'regand', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'relies', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'remage', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'remalf', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'remour', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'repard', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'repord', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'resely', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'resish', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'retion', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'rettle', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'reveld', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'rewess', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'rhyths', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'righer', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'rivice', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'rivins', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'roment', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'rubtle', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'ruscal', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'sacape', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'safend', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'salked', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'salley', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'scalty', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'schoon', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'schoos', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'scoret', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'sealls', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'secame', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'secone', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'seedio', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'seeily', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'seemer', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'seight', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'senger', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'senths', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'serson', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'shance', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'shange', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'sheely', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'sholed', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'shorms', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'shough', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'shound', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'shreat', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'sickon', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'sigure', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'silour', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'simput', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'siness', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'skilem', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'sloses', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'smiter', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'snable', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'socind', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'soctor', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'soffle', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'solite', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'soughy', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'sourse', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'sovels', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'sovent', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'sovese', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'spench', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'spenue', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'sporal', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'spraid', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'sprelf', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'spries', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'stague', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'starby', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'staret', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'stathy', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'strang', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'strely', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'strond', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'stuple', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'subbol', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'sudder', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'sunden', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'surned', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'swinks', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'syself', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'sysers', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'syster', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'takelf', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'tented', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'thange', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'theeze', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'thiest', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'thiled', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'thiner', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'thinty', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'thoing', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'thoses', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'thoult', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'thount', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'throus', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'timpen', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'tiscle', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'tondle', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'tonops', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'towert', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'trated', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'tryins', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'tureau', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'turing', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'turved', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'tweden', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'tweety', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'twenes', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'typila', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'unbour', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'uneves', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'unimed', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'uniter', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'unlour', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'valked', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'vallen', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'vareed', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'ventre', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'vieces', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'vionic', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'voises', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'wandle', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'wanter', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'wanual', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'warely', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'wasire', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'wealed', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'weared', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'whemed', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'widday', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'windon', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'winted', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'wisdow', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'wittle', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'wondan', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'wongen', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'wongle', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'worger', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'worror', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'wreame', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'wriely', 'wordNonword': 'nw', 'currentFont': 'Times'}, {'text': 'yelles', 'wordNonword': 'nw', 'currentFont': 'Times'}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="stimulus_sheet.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="inter_trial_interval"/>
    <Routine name="screen_display_images"/>
    <LoopTerminator name="trials"/>
    <LoopTerminator name="blocks"/>
    <Routine name="finish_instructions"/>
  </Flow>
</PsychoPy2experiment>
